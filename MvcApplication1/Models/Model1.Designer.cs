//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DBSoftSchoolModel", "FK_dresVilles", "dres", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SoftSchool.Models.dres), "Villes", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SoftSchool.Models.Villes), true)]
[assembly: EdmRelationshipAttribute("DBSoftSchoolModel", "FK_gouvernoratsdres", "gouvernorats", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SoftSchool.Models.gouvernorats), "dres", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SoftSchool.Models.dres), true)]
[assembly: EdmRelationshipAttribute("DBSoftSchoolModel", "FK_LogicielsHistorique", "Logiciels", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SoftSchool.Models.Logiciels), "Historiques", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SoftSchool.Models.Historiques), true)]
[assembly: EdmRelationshipAttribute("DBSoftSchoolModel", "FK_UtilisateursHistorique", "Utilisateurs", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SoftSchool.Models.Utilisateurs), "Historiques", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SoftSchool.Models.Historiques), true)]
[assembly: EdmRelationshipAttribute("DBSoftSchoolModel", "FK_Lycees_FK02", "Villes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SoftSchool.Models.Villes), "Lycees", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SoftSchool.Models.Lycees), true)]
[assembly: EdmRelationshipAttribute("DBSoftSchoolModel", "FK_LyceesUtilisateurs", "Lycees", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(SoftSchool.Models.Lycees), "Utilisateurs", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(SoftSchool.Models.Utilisateurs), true)]

#endregion

namespace SoftSchool.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class DBSoftSchoolEntities3 : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new DBSoftSchoolEntities3 object using the connection string found in the 'DBSoftSchoolEntities3' section of the application configuration file.
        /// </summary>
        public DBSoftSchoolEntities3() : base("name=DBSoftSchoolEntities3", "DBSoftSchoolEntities3")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DBSoftSchoolEntities3 object.
        /// </summary>
        public DBSoftSchoolEntities3(string connectionString) : base(connectionString, "DBSoftSchoolEntities3")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new DBSoftSchoolEntities3 object.
        /// </summary>
        public DBSoftSchoolEntities3(EntityConnection connection) : base(connection, "DBSoftSchoolEntities3")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<dres> dres
        {
            get
            {
                if ((_dres == null))
                {
                    _dres = base.CreateObjectSet<dres>("dres");
                }
                return _dres;
            }
        }
        private ObjectSet<dres> _dres;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<gouvernorats> gouvernorats
        {
            get
            {
                if ((_gouvernorats == null))
                {
                    _gouvernorats = base.CreateObjectSet<gouvernorats>("gouvernorats");
                }
                return _gouvernorats;
            }
        }
        private ObjectSet<gouvernorats> _gouvernorats;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Historiques> Historiques
        {
            get
            {
                if ((_Historiques == null))
                {
                    _Historiques = base.CreateObjectSet<Historiques>("Historiques");
                }
                return _Historiques;
            }
        }
        private ObjectSet<Historiques> _Historiques;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Logiciels> Logiciels
        {
            get
            {
                if ((_Logiciels == null))
                {
                    _Logiciels = base.CreateObjectSet<Logiciels>("Logiciels");
                }
                return _Logiciels;
            }
        }
        private ObjectSet<Logiciels> _Logiciels;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Lycees> Lycees
        {
            get
            {
                if ((_Lycees == null))
                {
                    _Lycees = base.CreateObjectSet<Lycees>("Lycees");
                }
                return _Lycees;
            }
        }
        private ObjectSet<Lycees> _Lycees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Utilisateurs> Utilisateurs
        {
            get
            {
                if ((_Utilisateurs == null))
                {
                    _Utilisateurs = base.CreateObjectSet<Utilisateurs>("Utilisateurs");
                }
                return _Utilisateurs;
            }
        }
        private ObjectSet<Utilisateurs> _Utilisateurs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Villes> Villes
        {
            get
            {
                if ((_Villes == null))
                {
                    _Villes = base.CreateObjectSet<Villes>("Villes");
                }
                return _Villes;
            }
        }
        private ObjectSet<Villes> _Villes;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the dres EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTodres(dres dres)
        {
            base.AddObject("dres", dres);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the gouvernorats EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTogouvernorats(gouvernorats gouvernorats)
        {
            base.AddObject("gouvernorats", gouvernorats);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Historiques EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHistoriques(Historiques historiques)
        {
            base.AddObject("Historiques", historiques);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Logiciels EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLogiciels(Logiciels logiciels)
        {
            base.AddObject("Logiciels", logiciels);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Lycees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLycees(Lycees lycees)
        {
            base.AddObject("Lycees", lycees);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Utilisateurs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUtilisateurs(Utilisateurs utilisateurs)
        {
            base.AddObject("Utilisateurs", utilisateurs);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Villes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVilles(Villes villes)
        {
            base.AddObject("Villes", villes);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBSoftSchoolModel", Name="dres")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class dres : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new dres object.
        /// </summary>
        /// <param name="governoratID">Initial value of the GovernoratID property.</param>
        /// <param name="dreId">Initial value of the DreId property.</param>
        public static dres Createdres(global::System.Int32 governoratID, global::System.Int32 dreId)
        {
            dres dres = new dres();
            dres.GovernoratID = governoratID;
            dres.DreId = dreId;
            return dres;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        [DisplayName("Libelle Arabe")]
        public global::System.String Nom_Ar
        {
            get
            {
                return _Nom_Ar;
            }
            set
            {
                OnNom_ArChanging(value);
                ReportPropertyChanging("Nom_Ar");
                _Nom_Ar = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Nom_Ar");
                OnNom_ArChanged();
            }
        }
        private global::System.String _Nom_Ar;
        partial void OnNom_ArChanging(global::System.String value);
        partial void OnNom_ArChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        [DisplayName("Libelle Français")]
        public global::System.String Nom_Fr
        {
            get
            {
                return _Nom_Fr;
            }
            set
            {
                OnNom_FrChanging(value);
                ReportPropertyChanging("Nom_Fr");
                _Nom_Fr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Nom_Fr");
                OnNom_FrChanged();
            }
        }
        private global::System.String _Nom_Fr;
        partial void OnNom_FrChanging(global::System.String value);
        partial void OnNom_FrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        [DisplayName("Governorat")]
        public global::System.Int32 GovernoratID
        {
            get
            {
                return _GovernoratID;
            }
            set
            {
                OnGovernoratIDChanging(value);
                ReportPropertyChanging("GovernoratID");
                _GovernoratID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GovernoratID");
                OnGovernoratIDChanged();
            }
        }
        private global::System.Int32 _GovernoratID;
        partial void OnGovernoratIDChanging(global::System.Int32 value);
        partial void OnGovernoratIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DreId
        {
            get
            {
                return _DreId;
            }
            set
            {
                if (_DreId != value)
                {
                    OnDreIdChanging(value);
                    ReportPropertyChanging("DreId");
                    _DreId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DreId");
                    OnDreIdChanged();
                }
            }
        }
        private global::System.Int32 _DreId;
        partial void OnDreIdChanging(global::System.Int32 value);
        partial void OnDreIdChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBSoftSchoolModel", "FK_dresVilles", "Villes")]
        public EntityCollection<Villes> Villes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Villes>("DBSoftSchoolModel.FK_dresVilles", "Villes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Villes>("DBSoftSchoolModel.FK_dresVilles", "Villes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBSoftSchoolModel", "FK_gouvernoratsdres", "gouvernorats")]
        public gouvernorats gouvernorats
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<gouvernorats>("DBSoftSchoolModel.FK_gouvernoratsdres", "gouvernorats").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<gouvernorats>("DBSoftSchoolModel.FK_gouvernoratsdres", "gouvernorats").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<gouvernorats> gouvernoratsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<gouvernorats>("DBSoftSchoolModel.FK_gouvernoratsdres", "gouvernorats");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<gouvernorats>("DBSoftSchoolModel.FK_gouvernoratsdres", "gouvernorats", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBSoftSchoolModel", Name="gouvernorats")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class gouvernorats : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new gouvernorats object.
        /// </summary>
        /// <param name="gouvernoratID">Initial value of the GouvernoratID property.</param>
        public static gouvernorats Creategouvernorats(global::System.Int32 gouvernoratID)
        {
            gouvernorats gouvernorats = new gouvernorats();
            gouvernorats.GouvernoratID = gouvernoratID;
            return gouvernorats;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Nom_Ar
        {
            get
            {
                return _Nom_Ar;
            }
            set
            {
                OnNom_ArChanging(value);
                ReportPropertyChanging("Nom_Ar");
                _Nom_Ar = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Nom_Ar");
                OnNom_ArChanged();
            }
        }
        private global::System.String _Nom_Ar;
        partial void OnNom_ArChanging(global::System.String value);
        partial void OnNom_ArChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Nom_Fr
        {
            get
            {
                return _Nom_Fr;
            }
            set
            {
                OnNom_FrChanging(value);
                ReportPropertyChanging("Nom_Fr");
                _Nom_Fr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Nom_Fr");
                OnNom_FrChanged();
            }
        }
        private global::System.String _Nom_Fr;
        partial void OnNom_FrChanging(global::System.String value);
        partial void OnNom_FrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 GouvernoratID
        {
            get
            {
                return _GouvernoratID;
            }
            set
            {
                if (_GouvernoratID != value)
                {
                    OnGouvernoratIDChanging(value);
                    ReportPropertyChanging("GouvernoratID");
                    _GouvernoratID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("GouvernoratID");
                    OnGouvernoratIDChanged();
                }
            }
        }
        private global::System.Int32 _GouvernoratID;
        partial void OnGouvernoratIDChanging(global::System.Int32 value);
        partial void OnGouvernoratIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBSoftSchoolModel", "FK_gouvernoratsdres", "dres")]
        public EntityCollection<dres> dres
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<dres>("DBSoftSchoolModel.FK_gouvernoratsdres", "dres");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<dres>("DBSoftSchoolModel.FK_gouvernoratsdres", "dres", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBSoftSchoolModel", Name="Historiques")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Historiques : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Historiques object.
        /// </summary>
        /// <param name="historiqueId">Initial value of the HistoriqueId property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        /// <param name="logicielID">Initial value of the LogicielID property.</param>
        /// <param name="utilisateurID">Initial value of the UtilisateurID property.</param>
        public static Historiques CreateHistoriques(global::System.Int32 historiqueId, global::System.String date, global::System.Int32 logicielID, global::System.Int32 utilisateurID)
        {
            Historiques historiques = new Historiques();
            historiques.HistoriqueId = historiqueId;
            historiques.Date = date;
            historiques.LogicielID = logicielID;
            historiques.UtilisateurID = utilisateurID;
            return historiques;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HistoriqueId
        {
            get
            {
                return _HistoriqueId;
            }
            set
            {
                if (_HistoriqueId != value)
                {
                    OnHistoriqueIdChanging(value);
                    ReportPropertyChanging("HistoriqueId");
                    _HistoriqueId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("HistoriqueId");
                    OnHistoriqueIdChanged();
                }
            }
        }
        private global::System.Int32 _HistoriqueId;
        partial void OnHistoriqueIdChanging(global::System.Int32 value);
        partial void OnHistoriqueIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.String _Date;
        partial void OnDateChanging(global::System.String value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LogicielID
        {
            get
            {
                return _LogicielID;
            }
            set
            {
                OnLogicielIDChanging(value);
                ReportPropertyChanging("LogicielID");
                _LogicielID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LogicielID");
                OnLogicielIDChanged();
            }
        }
        private global::System.Int32 _LogicielID;
        partial void OnLogicielIDChanging(global::System.Int32 value);
        partial void OnLogicielIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UtilisateurID
        {
            get
            {
                return _UtilisateurID;
            }
            set
            {
                OnUtilisateurIDChanging(value);
                ReportPropertyChanging("UtilisateurID");
                _UtilisateurID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UtilisateurID");
                OnUtilisateurIDChanged();
            }
        }
        private global::System.Int32 _UtilisateurID;
        partial void OnUtilisateurIDChanging(global::System.Int32 value);
        partial void OnUtilisateurIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBSoftSchoolModel", "FK_LogicielsHistorique", "Logiciels")]
        public Logiciels Logiciels
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Logiciels>("DBSoftSchoolModel.FK_LogicielsHistorique", "Logiciels").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Logiciels>("DBSoftSchoolModel.FK_LogicielsHistorique", "Logiciels").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Logiciels> LogicielsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Logiciels>("DBSoftSchoolModel.FK_LogicielsHistorique", "Logiciels");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Logiciels>("DBSoftSchoolModel.FK_LogicielsHistorique", "Logiciels", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBSoftSchoolModel", "FK_UtilisateursHistorique", "Utilisateurs")]
        public Utilisateurs Utilisateurs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Utilisateurs>("DBSoftSchoolModel.FK_UtilisateursHistorique", "Utilisateurs").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Utilisateurs>("DBSoftSchoolModel.FK_UtilisateursHistorique", "Utilisateurs").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Utilisateurs> UtilisateursReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Utilisateurs>("DBSoftSchoolModel.FK_UtilisateursHistorique", "Utilisateurs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Utilisateurs>("DBSoftSchoolModel.FK_UtilisateursHistorique", "Utilisateurs", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBSoftSchoolModel", Name="Logiciels")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Logiciels : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Logiciels object.
        /// </summary>
        /// <param name="logicielID">Initial value of the LogicielID property.</param>
        /// <param name="nom">Initial value of the Nom property.</param>
        /// <param name="version">Initial value of the Version property.</param>
        /// <param name="image">Initial value of the Image property.</param>
        /// <param name="descreption">Initial value of the Descreption property.</param>
        /// <param name="prix">Initial value of the Prix property.</param>
        /// <param name="lien">Initial value of the Lien property.</param>
        public static Logiciels CreateLogiciels(global::System.Int32 logicielID, global::System.String nom, global::System.String version, global::System.String image, global::System.String descreption, global::System.String prix, global::System.String lien)
        {
            Logiciels logiciels = new Logiciels();
            logiciels.LogicielID = logicielID;
            logiciels.Nom = nom;
            logiciels.Version = version;
            logiciels.Image = image;
            logiciels.Descreption = descreption;
            logiciels.Prix = prix;
            logiciels.Lien = lien;
            return logiciels;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LogicielID
        {
            get
            {
                return _LogicielID;
            }
            set
            {
                if (_LogicielID != value)
                {
                    OnLogicielIDChanging(value);
                    ReportPropertyChanging("LogicielID");
                    _LogicielID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LogicielID");
                    OnLogicielIDChanged();
                }
            }
        }
        private global::System.Int32 _LogicielID;
        partial void OnLogicielIDChanging(global::System.Int32 value);
        partial void OnLogicielIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nom
        {
            get
            {
                return _Nom;
            }
            set
            {
                OnNomChanging(value);
                ReportPropertyChanging("Nom");
                _Nom = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nom");
                OnNomChanged();
            }
        }
        private global::System.String _Nom;
        partial void OnNomChanging(global::System.String value);
        partial void OnNomChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.String _Version;
        partial void OnVersionChanging(global::System.String value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Image
        {
            get
            {
                return _Image;
            }
            set
            {
                OnImageChanging(value);
                ReportPropertyChanging("Image");
                _Image = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Image");
                OnImageChanged();
            }
        }
        private global::System.String _Image;
        partial void OnImageChanging(global::System.String value);
        partial void OnImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Descreption
        {
            get
            {
                return _Descreption;
            }
            set
            {
                OnDescreptionChanging(value);
                ReportPropertyChanging("Descreption");
                _Descreption = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Descreption");
                OnDescreptionChanged();
            }
        }
        private global::System.String _Descreption;
        partial void OnDescreptionChanging(global::System.String value);
        partial void OnDescreptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Prix
        {
            get
            {
                return _Prix;
            }
            set
            {
                OnPrixChanging(value);
                ReportPropertyChanging("Prix");
                _Prix = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Prix");
                OnPrixChanged();
            }
        }
        private global::System.String _Prix;
        partial void OnPrixChanging(global::System.String value);
        partial void OnPrixChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Lien
        {
            get
            {
                return _Lien;
            }
            set
            {
                OnLienChanging(value);
                ReportPropertyChanging("Lien");
                _Lien = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Lien");
                OnLienChanged();
            }
        }
        private global::System.String _Lien;
        partial void OnLienChanging(global::System.String value);
        partial void OnLienChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBSoftSchoolModel", "FK_LogicielsHistorique", "Historiques")]
        public EntityCollection<Historiques> Historiques
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Historiques>("DBSoftSchoolModel.FK_LogicielsHistorique", "Historiques");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Historiques>("DBSoftSchoolModel.FK_LogicielsHistorique", "Historiques", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBSoftSchoolModel", Name="Lycees")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lycees : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Lycees object.
        /// </summary>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="villeId">Initial value of the VilleId property.</param>
        /// <param name="lyceeID">Initial value of the LyceeID property.</param>
        public static Lycees CreateLycees(global::System.String code, global::System.Int32 villeId, global::System.Int32 lyceeID)
        {
            Lycees lycees = new Lycees();
            lycees.Code = code;
            lycees.VilleId = villeId;
            lycees.LyceeID = lyceeID;
            return lycees;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Nom
        {
            get
            {
                return _Nom;
            }
            set
            {
                OnNomChanging(value);
                ReportPropertyChanging("Nom");
                _Nom = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Nom");
                OnNomChanged();
            }
        }
        private global::System.String _Nom;
        partial void OnNomChanging(global::System.String value);
        partial void OnNomChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VilleId
        {
            get
            {
                return _VilleId;
            }
            set
            {
                OnVilleIdChanging(value);
                ReportPropertyChanging("VilleId");
                _VilleId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("VilleId");
                OnVilleIdChanged();
            }
        }
        private global::System.Int32 _VilleId;
        partial void OnVilleIdChanging(global::System.Int32 value);
        partial void OnVilleIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        [ScaffoldColumn(true)]
        [Key]
        public global::System.Int32 LyceeID
        {
            get
            {
                return _LyceeID;
            }
            set
            {
                if (_LyceeID != value)
                {
                    OnLyceeIDChanging(value);
                    ReportPropertyChanging("LyceeID");
                    _LyceeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LyceeID");
                    OnLyceeIDChanged();
                }
            }
        }
        private global::System.Int32 _LyceeID;
        partial void OnLyceeIDChanging(global::System.Int32 value);
        partial void OnLyceeIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBSoftSchoolModel", "FK_Lycees_FK02", "Villes")]
        public Villes Villes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Villes>("DBSoftSchoolModel.FK_Lycees_FK02", "Villes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Villes>("DBSoftSchoolModel.FK_Lycees_FK02", "Villes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Villes> VillesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Villes>("DBSoftSchoolModel.FK_Lycees_FK02", "Villes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Villes>("DBSoftSchoolModel.FK_Lycees_FK02", "Villes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBSoftSchoolModel", "FK_LyceesUtilisateurs", "Utilisateurs")]
        public EntityCollection<Utilisateurs> Utilisateurs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Utilisateurs>("DBSoftSchoolModel.FK_LyceesUtilisateurs", "Utilisateurs");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Utilisateurs>("DBSoftSchoolModel.FK_LyceesUtilisateurs", "Utilisateurs", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBSoftSchoolModel", Name="Utilisateurs")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Utilisateurs : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Utilisateurs object.
        /// </summary>
        /// <param name="utilisateurId">Initial value of the UtilisateurId property.</param>
        /// <param name="nom">Initial value of the Nom property.</param>
        /// <param name="prenom">Initial value of the Prenom property.</param>
        /// <param name="login">Initial value of the Login property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="lyceeID">Initial value of the LyceeID property.</param>
        public static Utilisateurs CreateUtilisateurs(global::System.Int32 utilisateurId, global::System.String nom, global::System.String prenom, global::System.String login, global::System.String password, global::System.Int32 lyceeID)
        {
            Utilisateurs utilisateurs = new Utilisateurs();
            utilisateurs.UtilisateurId = utilisateurId;
            utilisateurs.Nom = nom;
            utilisateurs.Prenom = prenom;
            utilisateurs.Login = login;
            utilisateurs.Password = password;
            utilisateurs.LyceeID = lyceeID;
            return utilisateurs;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UtilisateurId
        {
            get
            {
                return _UtilisateurId;
            }
            set
            {
                if (_UtilisateurId != value)
                {
                    OnUtilisateurIdChanging(value);
                    ReportPropertyChanging("UtilisateurId");
                    _UtilisateurId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UtilisateurId");
                    OnUtilisateurIdChanged();
                }
            }
        }
        private global::System.Int32 _UtilisateurId;
        partial void OnUtilisateurIdChanging(global::System.Int32 value);
        partial void OnUtilisateurIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nom
        {
            get
            {
                return _Nom;
            }
            set
            {
                OnNomChanging(value);
                ReportPropertyChanging("Nom");
                _Nom = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nom");
                OnNomChanged();
            }
        }
        private global::System.String _Nom;
        partial void OnNomChanging(global::System.String value);
        partial void OnNomChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Prenom
        {
            get
            {
                return _Prenom;
            }
            set
            {
                OnPrenomChanging(value);
                ReportPropertyChanging("Prenom");
                _Prenom = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Prenom");
                OnPrenomChanged();
            }
        }
        private global::System.String _Prenom;
        partial void OnPrenomChanging(global::System.String value);
        partial void OnPrenomChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Login
        {
            get
            {
                return _Login;
            }
            set
            {
                OnLoginChanging(value);
                ReportPropertyChanging("Login");
                _Login = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Login");
                OnLoginChanged();
            }
        }
        private global::System.String _Login;
        partial void OnLoginChanging(global::System.String value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LyceeID
        {
            get
            {
                return _LyceeID;
            }
            set
            {
                OnLyceeIDChanging(value);
                ReportPropertyChanging("LyceeID");
                _LyceeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LyceeID");
                OnLyceeIDChanged();
            }
        }
        private global::System.Int32 _LyceeID;
        partial void OnLyceeIDChanging(global::System.Int32 value);
        partial void OnLyceeIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBSoftSchoolModel", "FK_UtilisateursHistorique", "Historiques")]
        public EntityCollection<Historiques> Historiques
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Historiques>("DBSoftSchoolModel.FK_UtilisateursHistorique", "Historiques");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Historiques>("DBSoftSchoolModel.FK_UtilisateursHistorique", "Historiques", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBSoftSchoolModel", "FK_LyceesUtilisateurs", "Lycees")]
        public Lycees Lycees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lycees>("DBSoftSchoolModel.FK_LyceesUtilisateurs", "Lycees").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lycees>("DBSoftSchoolModel.FK_LyceesUtilisateurs", "Lycees").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Lycees> LyceesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lycees>("DBSoftSchoolModel.FK_LyceesUtilisateurs", "Lycees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Lycees>("DBSoftSchoolModel.FK_LyceesUtilisateurs", "Lycees", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DBSoftSchoolModel", Name="Villes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Villes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Villes object.
        /// </summary>
        /// <param name="nom_Ar">Initial value of the Nom_Ar property.</param>
        /// <param name="dreID">Initial value of the DreID property.</param>
        /// <param name="villeID">Initial value of the VilleID property.</param>
        public static Villes CreateVilles(global::System.String nom_Ar, global::System.Int32 dreID, global::System.Int32 villeID)
        {
            Villes villes = new Villes();
            villes.Nom_Ar = nom_Ar;
            villes.DreID = dreID;
            villes.VilleID = villeID;
            return villes;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nom_Ar
        {
            get
            {
                return _Nom_Ar;
            }
            set
            {
                OnNom_ArChanging(value);
                ReportPropertyChanging("Nom_Ar");
                _Nom_Ar = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nom_Ar");
                OnNom_ArChanged();
            }
        }
        private global::System.String _Nom_Ar;
        partial void OnNom_ArChanging(global::System.String value);
        partial void OnNom_ArChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Nom_Fr
        {
            get
            {
                return _Nom_Fr;
            }
            set
            {
                OnNom_FrChanging(value);
                ReportPropertyChanging("Nom_Fr");
                _Nom_Fr = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Nom_Fr");
                OnNom_FrChanged();
            }
        }
        private global::System.String _Nom_Fr;
        partial void OnNom_FrChanging(global::System.String value);
        partial void OnNom_FrChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DreID
        {
            get
            {
                return _DreID;
            }
            set
            {
                OnDreIDChanging(value);
                ReportPropertyChanging("DreID");
                _DreID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DreID");
                OnDreIDChanged();
            }
        }
        private global::System.Int32 _DreID;
        partial void OnDreIDChanging(global::System.Int32 value);
        partial void OnDreIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 VilleID
        {
            get
            {
                return _VilleID;
            }
            set
            {
                if (_VilleID != value)
                {
                    OnVilleIDChanging(value);
                    ReportPropertyChanging("VilleID");
                    _VilleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("VilleID");
                    OnVilleIDChanged();
                }
            }
        }
        private global::System.Int32 _VilleID;
        partial void OnVilleIDChanging(global::System.Int32 value);
        partial void OnVilleIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBSoftSchoolModel", "FK_dresVilles", "dres")]
        public dres dres
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<dres>("DBSoftSchoolModel.FK_dresVilles", "dres").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<dres>("DBSoftSchoolModel.FK_dresVilles", "dres").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<dres> dresReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<dres>("DBSoftSchoolModel.FK_dresVilles", "dres");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<dres>("DBSoftSchoolModel.FK_dresVilles", "dres", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DBSoftSchoolModel", "FK_Lycees_FK02", "Lycees")]
        public EntityCollection<Lycees> Lycees
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lycees>("DBSoftSchoolModel.FK_Lycees_FK02", "Lycees");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lycees>("DBSoftSchoolModel.FK_Lycees_FK02", "Lycees", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
